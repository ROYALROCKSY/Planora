/* Tasks Page Styles - tasks.css */
/* Theme: Pastel Pink â†” Purple, minimal, clean, responsive */

/* define a tight 5-color palette and shared tokens */
:root {
  /* 5 colors total */
  --brand-pink: #ec4899; /* pink */
  --brand-purple: #a855f7; /* purple */
  --text-900: #111827; /* strong text */
  --muted-600: #6b7280; /* muted text */
  --surface: #ffffff; /* card surface */

  /* tokens */
  --radius-2xl: 16px; /* rounded-2xl */
  --radius-lg: 12px;
  --shadow-soft: 0 8px 24px rgba(17, 24, 39, 0.08);
  --shadow-hover: 0 12px 32px rgba(17, 24, 39, 0.12);
  --ring: 0 0 0 4px rgba(236, 72, 153, 0.28); /* pink focus ring */
}

/* Base */
.task-page {
  color: var(--text-900);
  padding: 24px clamp(16px, 4vw, 32px);
  display: grid;
  gap: 20px;
  background: radial-gradient(120% 120% at 0% 0%, rgba(168, 85, 247, 0.08) 0%, transparent 60%),
    radial-gradient(120% 120% at 100% 0%, rgba(236, 72, 153, 0.08) 0%, transparent 60%);
  border-radius: var(--radius-2xl);
}

/* Header with gradient */
.task-page > h2 {
  margin: 0;
  padding: 18px 20px;
  font-size: clamp(22px, 3.2vw, 28px);
  font-weight: 700;
  letter-spacing: -0.02em;
  line-height: 1.2;
  color: var(--surface);
  background-image: linear-gradient(135deg, var(--brand-pink), var(--brand-purple));
  border-radius: var(--radius-2xl);
  box-shadow: var(--shadow-soft);
}

/* Card containers */
.task-form-section,
.task-list-section {
  background: var(--surface);
  border-radius: var(--radius-2xl);
  box-shadow: var(--shadow-soft);
  border: 1px solid rgba(17, 24, 39, 0.06);
  padding: clamp(16px, 3vw, 20px);
}

/* Layout: stack on mobile, side-by-side on desktop */
@media (min-width: 900px) {
  .task-page {
    grid-template-columns: 1fr; /* force single-column layout so the task list sits below the form */
  }
  .task-page > h2,
  .task-form-section,
  .task-list-section {
    grid-column: 1;
  }
}

/* Form */
#task-form {
  display: grid;
  gap: 14px;
}

.form-row {
  display: grid;
  gap: 8px;
}

.form-row label {
  font-size: 12px;
  font-weight: 600;
  letter-spacing: 0.02em;
  color: var(--muted-600);
  text-transform: uppercase;
}

#task-form input[type="text"],
#task-form input[type="number"],
#task-form input[type="datetime-local"],
#task-form select {
  width: 100%;
  appearance: none;
  background: var(--surface);
  border: 1px solid rgba(17, 24, 39, 0.12);
  border-radius: var(--radius-lg);
  padding: 12px 14px;
  color: var(--text-900);
  font-size: 14px;
  line-height: 1.5;
  transition: box-shadow 160ms ease, border-color 160ms ease, transform 160ms ease, background-color 160ms ease;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.7);
}

#task-form input::placeholder {
  color: var(--muted-600);
}

#task-form input:focus-visible,
#task-form select:focus-visible {
  outline: none;
  border-color: transparent;
  box-shadow: var(--ring), inset 0 1px 0 rgba(255, 255, 255, 0.7);
}

/* Form actions */
.form-actions {
  display: flex;
  gap: 10px;
  align-items: center;
  justify-content: flex-start;
  margin-top: 6px;
}

.form-actions button {
  appearance: none;
  border: 0;
  border-radius: var(--radius-lg);
  padding: 12px 16px;
  font-weight: 600;
  font-size: 14px;
  cursor: pointer;
  color: var(--surface);
  background-image: linear-gradient(135deg, var(--brand-pink), var(--brand-purple));
  box-shadow: 0 6px 16px rgba(236, 72, 153, 0.22), 0 2px 6px rgba(168, 85, 247, 0.16);
  transition: transform 160ms ease, box-shadow 160ms ease, filter 160ms ease, opacity 160ms ease;
}

.form-actions button:hover {
  transform: translateY(-1px);
  box-shadow: var(--shadow-hover);
  filter: saturate(1.05);
}

.form-actions button:active {
  transform: translateY(0);
  filter: saturate(0.98);
}

.form-actions button:focus-visible {
  outline: none;
  box-shadow: var(--ring), var(--shadow-soft);
}

/* Cancel button as subtle/ghost */
#cancel-edit-btn {
  color: var(--brand-purple);
  background: linear-gradient(0deg, rgba(168, 85, 247, 0.12), rgba(168, 85, 247, 0.12));
  border: 1px solid rgba(168, 85, 247, 0.25);
  box-shadow: none;
}

#cancel-edit-btn:hover {
  background: linear-gradient(0deg, rgba(168, 85, 247, 0.16), rgba(168, 85, 247, 0.16));
}

/* Tasks list */
.task-list-section h3 {
  margin: 0 0 12px 0;
  padding: 12px 14px;
  color: var(--surface);
  font-size: clamp(16px, 2.4vw, 18px);
  font-weight: 700;
  letter-spacing: -0.01em;
  line-height: 1.25;
  border-radius: var(--radius-lg);
  background-image: linear-gradient(135deg, var(--brand-pink), var(--brand-purple));
  box-shadow: var(--shadow-soft);
}

.tasks-list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: grid;
  gap: 10px;
}

/* make task items a 3-column grid so content wraps without pushing buttons */
.tasks-list li {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: start; /* ensure items start, not center */
  gap: 12px 14px;
  padding: 12px 14px;
  background: var(--surface);
  border-radius: var(--radius-lg);
  border: 1px solid rgba(17, 24, 39, 0.08);
  box-shadow: var(--shadow-soft);
}

/* place checkbox in first column, consistent sizing */
.tasks-list li > input[type="checkbox"] {
  grid-column: 1;
  margin-top: 4px;
}

/* route general content to middle column (title, meta etc.) */
.tasks-list li > :not(input[type="checkbox"]):not(button):not(.task-actions):not(.priority):not([data-priority]) {
  grid-column: 2;
}

/* allow long titles to wrap cleanly without affecting right rail */
.tasks-list li .title {
  grid-column: 2;
  font-weight: 600;
  color: var(--text-900);
  overflow-wrap: anywhere;
}

/* meta row wraps and stays under the title (remove margin-left:auto from older styles) */
.tasks-list li .meta {
  grid-column: 2;
  margin-left: 0;
  display: flex;
  flex-wrap: wrap;
  gap: 8px 10px;
  color: var(--muted-600);
  font-size: 13px;
}

/* priority chip highlighted and fixed at the right.
   If your JS sets .priority or data-priority, this will render as a chip. */
.tasks-list li .priority,
.tasks-list li [data-priority] {
  grid-column: 3;
  justify-self: end;
  align-self: start;
  font-weight: 700;
  font-size: 12px;
  padding: 6px 10px;
  border-radius: 999px;
  color: var(--surface);
  background-image: linear-gradient(135deg, var(--brand-pink), var(--brand-purple));
  box-shadow: 0 4px 12px rgba(236, 72, 153, 0.18);
}

.tasks-list li .priority.high,
.tasks-list li [data-priority="High"] {
  filter: saturate(1.05);
}

.tasks-list li .priority.medium,
.tasks-list li [data-priority="Medium"] {
  opacity: 0.95;
}

.tasks-list li .priority.low,
.tasks-list li [data-priority="Low"] {
  opacity: 0.9;
}

/* actions stay in right column. If you have a wrapper .task-actions, it lays buttons inline; 
   if not, individual buttons will stack neatly in the right rail. */
.tasks-list li button {
  grid-column: 3;
  justify-self: end;
  appearance: none;
  border: 0;
  border-radius: var(--radius-lg);
  padding: 8px 12px;
  font-weight: 600;
  font-size: 13px;
  cursor: pointer;
  color: var(--surface);
  background-image: linear-gradient(135deg, var(--brand-pink), var(--brand-purple));
  box-shadow: 0 4px 12px rgba(236, 72, 153, 0.18), 0 2px 6px rgba(168, 85, 247, 0.12);
  transition: transform 140ms ease, box-shadow 140ms ease, filter 140ms ease;
}

.tasks-list li .task-actions {
  grid-column: 3;
  justify-self: end;
  display: inline-flex;
  gap: 8px;
  flex-wrap: nowrap;
}

.tasks-list li .task-actions button {
  grid-column: auto;
}

/* hover/focus remain subtle and consistent */
.tasks-list li button:hover {
  transform: translateY(-1px);
  box-shadow: var(--shadow-hover);
  filter: saturate(1.05);
}

.tasks-list li button:focus-visible {
  outline: none;
  box-shadow: var(--ring), var(--shadow-soft);
}

/* responsive: on small screens, stack the right rail (priority + actions) below content */
@media (max-width: 640px) {
  .tasks-list li {
    grid-template-columns: auto 1fr;
  }

  .tasks-list li .priority,
  .tasks-list li button,
  .tasks-list li .task-actions {
    grid-column: 1 / -1;
    justify-self: start;
    margin-top: 8px;
  }

  .tasks-list li .task-actions {
    gap: 10px;
  }
}
